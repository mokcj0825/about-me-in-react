{
  "id": "wreath_of_interlaced_pipes_test",
  "name": "Wreath of Interlaced Pipes Survival Test",
  "description": "Demonstrates the survival mechanism of Wreath of Interlaced Pipes blessing",
  "rarity": 1,
  "category": "defense",
  "implementation": {
    "data_structures": {
      "survival_effect": {
        "id": "wreath_survival",
        "type": "survival_trigger",
        "energy_cost": "all",
        "hp_recovery_ratio": 0.5,
        "trigger": "before_knockout",
        "uses_per_team": 1
      },
      "event_types": [
        "damage_received",
        "before_knockout",
        "energy_consumed",
        "hp_recovered",
        "blessing_used"
      ],
      "required_interfaces": {
        "DamageHandler": {
          "methods": [
            "calculateDamage(source: Unit, target: Unit, amount: number): number",
            "applyDamage(target: Unit, amount: number): void",
            "isKnockoutDamage(unit: Unit, damage: number): boolean"
          ]
        },
        "BlessingManager": {
          "methods": [
            "hasBlessing(unit: Unit, blessingId: string): boolean",
            "hasBlessingBeenUsed(teamId: string, blessingId: string): boolean",
            "markBlessingAsUsed(teamId: string, blessingId: string): void"
          ]
        },
        "ResourceManager": {
          "methods": [
            "consumeEnergy(unit: Unit, amount: number): number",
            "recoverHp(unit: Unit, amount: number): number"
          ]
        }
      }
    },
    "event_flow": [
      {
        "trigger": "damage_received",
        "checks": [
          "Is damage lethal?",
          "Does unit have wreath_of_interlaced_pipes blessing?",
          "Has blessing not been used by team yet?"
        ],
        "actions": [
          "Calculate energy to consume (all remaining)",
          "Calculate HP to recover (50% of consumed energy)",
          "Consume energy",
          "Recover HP",
          "Mark blessing as used for team",
          "Emit blessing_used event"
        ]
      }
    ],
    "pseudocode": {
      "damage_handling": [
        "function handleDamage(event: DamageEvent) {",
        "  const damage = damageHandler.calculateDamage(event.source, event.target, event.amount);",
        "  ",
        "  if (damageHandler.isKnockoutDamage(event.target, damage)) {",
        "    if (blessingManager.hasBlessing(event.target, 'wreath_of_interlaced_pipes') &&",
        "        !blessingManager.hasBlessingBeenUsed(event.target.teamId, 'wreath_of_interlaced_pipes')) {",
        "      const energyConsumed = resourceManager.consumeEnergy(event.target, event.target.energy);",
        "      const hpRecovered = resourceManager.recoverHp(event.target, energyConsumed * 0.5);",
        "      ",
        "      blessingManager.markBlessingAsUsed(event.target.teamId, 'wreath_of_interlaced_pipes');",
        "      emitEvent('blessing_used', { target: event.target, blessing: 'wreath_of_interlaced_pipes' });",
        "    }",
        "  }",
        "  ",
        "  damageHandler.applyDamage(event.target, damage);",
        "}"
      ]
    }
  },
  "validation": {
    "success_conditions": [
      "First attacked player unit should not be knocked out",
      "First attacked player unit's energy should be consumed",
      "First attacked player unit should recover HP equal to 50% of consumed energy",
      "Second attacked player unit should be knocked out (blessing already used)",
      "No energy consumption or HP recovery for second attacked unit"
    ],
    "edge_cases": [
      "Blessing should only work once per team",
      "HP recovery should not exceed maxHp",
      "Energy consumption should not go below 0",
      "Blessing should work regardless of attack order"
    ]
  }
}
