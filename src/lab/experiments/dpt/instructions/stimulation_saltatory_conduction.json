{
  "id": "stimulation_saltatory_conduction",
  "name": "Stimulation: Saltatory Conduction",
  "description": "When characters use their Ultimate to attack enemies that are Weakness Broken, delay the enemy's action by 16.0%. Every time the enemy target becomes Weakness Broken, this effect can be triggered up to 3 times.",
  "rarity": 2,
  "category": "hinder",
  "implementation": {
    "data_structures": {
      "delay_effect": {
        "id": "saltatory_delay",
        "type": "action_modifier",
        "value": 16,
        "value_type": "percentage",
        "max_triggers_per_weakness": 3,
        "trigger": "on_ultimate_hit_weakness_broken"
      },
      "trigger_tracker": {
        "type": "counter",
        "key": "weakness_break_count",
        "reset_on": "weakness_break_removed",
        "track_per_target": true
      },
      "event_types": [
        "ability_used",
        "weakness_break_applied",
        "weakness_break_removed",
        "action_gauge_modified",
        "turn_start",
        "turn_end"
      ],
      "required_interfaces": {
        "ActionGaugeManager": {
          "methods": [
            "modifyActionGauge(target: Unit, percentage: number): void",
            "getActionGauge(unit: Unit): number",
            "isWeaknessBroken(unit: Unit): boolean"
          ]
        },
        "TriggerTracker": {
          "methods": [
            "incrementTriggerCount(targetId: string, triggerId: string): void",
            "getTriggerCount(targetId: string, triggerId: string): number",
            "resetTriggerCount(targetId: string, triggerId: string): void"
          ]
        },
        "AbilityHandler": {
          "methods": [
            "isUltimateAbility(ability: Ability): boolean",
            "handleAbilityUsed(actor: Unit, ability: Ability, targets: Unit[]): void"
          ]
        }
      }
    },
    "event_flow": [
      {
        "trigger": "ability_used",
        "checks": [
          "Is ability an Ultimate?",
          "Are any targets Weakness Broken?",
          "Does user have stimulation_saltatory_conduction blessing?",
          "Have targets not exceeded max triggers for current weakness break?"
        ],
        "actions": [
          "For each valid target:",
          "- Get current trigger count",
          "- If count < max_triggers:",
          "  - Apply action gauge delay",
          "  - Increment trigger count",
          "  - Emit action_gauge_modified event"
        ]
      },
      {
        "trigger": "weakness_break_applied",
        "actions": [
          "Reset trigger count for target"
        ]
      },
      {
        "trigger": "weakness_break_removed",
        "actions": [
          "Clear trigger count for target"
        ]
      }
    ],
    "pseudocode": {
      "handle_ultimate": [
        "function handleAbilityUsed(event: AbilityUsedEvent) {",
        "  if (!isUltimateAbility(event.ability)) return;",
        "  if (!hasBlessing(event.actor, 'stimulation_saltatory_conduction')) return;",
        "  ",
        "  for (const target of event.targets) {",
        "    if (!actionGaugeManager.isWeaknessBroken(target)) continue;",
        "    ",
        "    const triggerCount = triggerTracker.getTriggerCount(target.id, 'saltatory_delay');",
        "    if (triggerCount >= 3) continue;",
        "    ",
        "    actionGaugeManager.modifyActionGauge(target, -16);",
        "    triggerTracker.incrementTriggerCount(target.id, 'saltatory_delay');",
        "    ",
        "    emitEvent('action_gauge_modified', {",
        "      target,",
        "      source: event.actor,",
        "      value: -16,",
        "      type: 'delay'",
        "    });",
        "  }",
        "}"
      ],
      "handle_weakness_break": [
        "function handleWeaknessBreakApplied(event: WeaknessBreakEvent) {",
        "  triggerTracker.resetTriggerCount(event.target.id, 'saltatory_delay');",
        "}",
        "",
        "function handleWeaknessBreakRemoved(event: WeaknessBreakEvent) {",
        "  triggerTracker.resetTriggerCount(event.target.id, 'saltatory_delay');",
        "}"
      ]
    }
  },
  "validation": {
    "success_conditions": [
      "Enemy action gauge is delayed by 16% when hit by Ultimate while Weakness Broken",
      "Delay effect can be triggered up to 3 times per Weakness Break state",
      "Trigger count resets when target becomes Weakness Broken again",
      "Delay effect only applies to Weakness Broken targets",
      "Only Ultimate abilities can trigger the delay effect"
    ],
    "edge_cases": [
      "Multiple units with this blessing hitting the same target",
      "Target becoming un-broken and re-broken multiple times",
      "Ultimate hitting multiple targets simultaneously",
      "Action gauge manipulation with other effects",
      "Trigger count persistence across turns",
      "Interaction with other action gauge modifying effects"
    ]
  }
} 