{
  "id": "fungal_pustule",
  "name": "Fungal Pustule",
  "path": "propagation",
  "description": "For each Skill Point recovered, apply 1 Spore to 2 random enemy target(s).",
  "rarity": 3,
  "category": "boost",
  "implementation": {
    "data_structure": {
      "spore_application": {
        "id": "fungal_pustule_spores",
        "type": "effect_modifier",
        "effect": "spore",
        "count": 1,
        "targets": 2,
        "target_type": "random_enemy",
        "trigger": "skill_point_recovered"
      },
      "event_type": [
        "skill_point_recovered",
        "spore_applied",
        "target_selected",
        "effect_modifier_applied",
        "blessing_triggered"
      ],
      "required_interface": {
        "SporeManager": {
          "method": [
            "apply_spores(source: Unit, target: Unit, count: number): void",
            "can_receive_spores(unit: Unit): boolean"
          ]
        },
        "SkillPointManager": {
          "method": [
            "on_skill_point_recovered(callback: (data: { unit: Unit, amount: number }) => void): void"
          ]
        },
        "TargetingManager": {
          "method": [
            "get_all_enemies(): Unit[]",
            "get_random_units(units: Unit[], count: number): Unit[]",
            "is_valid_target(unit: Unit): boolean"
          ]
        },
        "TeamManager": {
          "method": [
            "is_enemy(unit: Unit): boolean"
          ]
        }
      }
    },
    "event_flow": [
      {
        "trigger": "skill_point_recovered",
        "check": [
          "Are there any valid enemy targets?",
          "Can targets receive Spores?"
        ],
        "action": [
          "Get all enemy units",
          "Filter for valid Spore targets",
          "Select 2 random targets",
          "Apply 1 Spore to each target",
          "Emit spore_applied event for each target",
          "Emit blessing_triggered event"
        ]
      }
    ],
    "pseudocode": {
      "skill_point_recovery_handler": [
        "function handle_skill_point_recovered({ unit, amount }: { unit: Unit, amount: number }) {",
        "  const all_enemies = targeting_manager.get_all_enemies();",
        "  ",
        "  const valid_targets = all_enemies.filter(enemy => {",
        "    return targeting_manager.is_valid_target(enemy) &&",
        "           spore_manager.can_receive_spores(enemy);",
        "  });",
        "  ",
        "  if (valid_targets.length === 0) return;",
        "  ",
        "  const target_count = Math.min(2, valid_targets.length);",
        "  const selected_targets = targeting_manager.get_random_units(valid_targets, target_count);",
        "  ",
        "  for (const target of selected_targets) {",
        "    emit_event('target_selected', {",
        "      source: unit,",
        "      target: target,",
        "      effect: 'spore'",
        "    });",
        "    ",
        "    spore_manager.apply_spores(unit, target, 1);",
        "    ",
        "    emit_event('spore_applied', {",
        "      source: unit,",
        "      target: target,",
        "      count: 1",
        "    });",
        "    ",
        "    emit_event('effect_modifier_applied', {",
        "      source: unit,",
        "      target: target,",
        "      modifier: {",
        "        id: 'fungal_pustule_spores',",
        "        type: 'effect_modifier',",
        "        effect: 'spore',",
        "        count: 1",
        "      }",
        "    });",
        "  }",
        "  ",
        "  emit_event('blessing_triggered', {",
        "    blessing: 'fungal_pustule',",
        "    trigger: 'skill_point_recovered',",
        "    source: unit,",
        "    detail: {",
        "      sp_recovered: amount,",
        "      targets_affected: selected_targets.length,",
        "      spores_applied: selected_targets.length",
        "    }",
        "  });",
        "}"
      ]
    }
  },
  "validation": {
    "success_condition": [
      "Spores are applied for each Skill Point recovery",
      "Exactly 2 random enemies are targeted when available",
      "Each target receives exactly 1 Spore",
      "Only valid enemy targets are selected",
      "Spores are applied immediately after Skill Point recovery"
    ],
    "edge_case": [
      "Less than 2 valid targets available",
      "No valid targets available",
      "Multiple Skill Point recoveries in succession",
      "Target dies during Spore application",
      "Target reaches maximum Spore capacity",
      "All enemies already have maximum Spores"
    ]
  }
} 